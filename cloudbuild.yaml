steps:
  # Set environment variables
  - name: 'bash'
    id: 'set-env'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Setting environment variables..."
        echo "BUILD_ID=$BUILD_ID"
        echo "COMMIT_SHA=$COMMIT_SHA"
        echo "BRANCH_NAME=$BRANCH_NAME"
        echo "Removing Google Cloud Storage dependencies..."
        sed -i '/google\/cloud-storage/d' composer.json
        sed -i '/superbalist\/flysystem-google-storage/d' composer.json
        cat composer.json

  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-image'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/chambers-api:$COMMIT_SHA', '.']

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-image'
    args: ['push', 'gcr.io/$PROJECT_ID/chambers-api:$COMMIT_SHA']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'chambers-api-staging'
      - '--image'
      - 'gcr.io/$PROJECT_ID/chambers-api:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '10'
      - '--set-env-vars'
      - 'APP_ENV=production,APP_DEBUG=false,DB_CONNECTION=pgsql,DB_HOST=${_DB_HOST},DB_PORT=${_DB_PORT},DB_DATABASE=${_DB_DATABASE},DB_USERNAME=${_DB_USERNAME},DB_PASSWORD=${_DB_PASSWORD}'
      - '--set-cloudsql-instances'
      - '${_CLOUDSQL_CONNECTION_NAME}'

images:
  - 'gcr.io/$PROJECT_ID/chambers-api:$COMMIT_SHA'

substitutions:
  _REGION: 'asia-south1'
  _DB_HOST: '34.100.232.139'
  _DB_PORT: '5432'
  _DB_DATABASE: 'chambers_api'
  _DB_USERNAME: 'postgres'
  _DB_PASSWORD: ''
  _CLOUDSQL_CONNECTION_NAME: 'intellicrafts-dev:asia-south1:master-db'

options:
  logging: CLOUD_LOGGING_ONLY
