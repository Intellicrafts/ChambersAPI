steps:
  # Set environment variables
  - name: 'bash'
    id: 'set-env'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Setting environment variables..."
        echo "BUILD_ID=$BUILD_ID"
        echo "COMMIT_SHA=$COMMIT_SHA"
        echo "BRANCH_NAME=$BRANCH_NAME"

  # Prepare application for deployment
  - name: 'composer:2'
    id: 'prepare-app'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Preparing application..."
        chmod +x deploy.sh
        BUILD_ID=$BUILD_ID ./deploy.sh production

  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-image'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/chambers-api:$COMMIT_SHA', '.']

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-image'
    args: ['push', 'gcr.io/$PROJECT_ID/chambers-api:$COMMIT_SHA']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'chambers-api-staging'
      - '--image'
      - 'gcr.io/$PROJECT_ID/chambers-api:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'APP_KEY=${_APP_KEY},DB_HOST=${_DB_HOST},DB_DATABASE=${_DB_DATABASE},DB_USERNAME=${_DB_USERNAME},DB_PASSWORD=${_DB_PASSWORD},MAIL_HOST=${_MAIL_HOST},MAIL_USERNAME=${_MAIL_USERNAME},MAIL_PASSWORD=${_MAIL_PASSWORD}'
      - '--set-cloudsql-instances'
      - '${_CLOUDSQL_CONNECTION_NAME}'
      - '--vpc-connector'
      - '${_VPC_CONNECTOR}'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '10'
      - '--service-account'
      - '${_SERVICE_ACCOUNT}'

  # Run database migrations
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'jobs'
      - 'create'
      - 'chambers-api-migrations'
      - '--image'
      - 'gcr.io/$PROJECT_ID/chambers-api:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--set-env-vars'
      - 'APP_KEY=${_APP_KEY},DB_HOST=${_DB_HOST},DB_DATABASE=${_DB_DATABASE},DB_USERNAME=${_DB_USERNAME},DB_PASSWORD=${_DB_PASSWORD}'
      - '--set-cloudsql-instances'
      - '${_CLOUDSQL_CONNECTION_NAME}'
      - '--vpc-connector'
      - '${_VPC_CONNECTOR}'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--service-account'
      - '${_SERVICE_ACCOUNT}'
      - '--command'
      - 'php'
      - '--args'
      - 'artisan,migrate,--force'

  # Execute the migration job
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'jobs'
      - 'execute'
      - 'chambers-api-migrations'
      - '--region'
      - 'us-central1'

images:
  - 'gcr.io/$PROJECT_ID/chambers-api:$COMMIT_SHA'

substitutions:
  _APP_KEY: ''
  _DB_HOST: ''
  _DB_DATABASE: 'bakil_laravel'
  _DB_USERNAME: 'bakil_user'
  _DB_PASSWORD: ''
  _MAIL_HOST: 'smtp.mailgun.org'
  _MAIL_USERNAME: ''
  _MAIL_PASSWORD: ''
  _CLOUDSQL_CONNECTION_NAME: ''
  _VPC_CONNECTOR: ''
  _SERVICE_ACCOUNT: ''

options:
  logging: CLOUD_LOGGING_ONLY